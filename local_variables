# Development mode for developing / testing the script
# Add dev password to base user
# Should be 0 in production
export DEV_MODE=1

# Are we running the script locally for testing?
# Or is the script run in the correct directory?
# Should be 1 for this local testing the script, 0 in the pipeline execution
export LOCAL_MODE=1

# Supported OS: raspbian, raspios, ubuntu18, ubuntu20
export IMAGE_OS='raspios'

# For QEMU available archs: aarch64, arm, armeb, i386, x86_64
export IMAGE_ARCH='arm'

# General file name for image versioning file
# Needed to transfer the version between the scripts and cloud <-> device
export IMAGE_VER_FILE='image_version'

# The version to be started from in case no previous version exists
# NOTE: This version is incremented once before the final value is used
# Current: if minor == 9 && rev == 99 => major + 1, minor=0, rev=0
# Meaning initial version: 0.99.9 => 1.0.0
export INITIAL_VERSION='0.9.99'

# Thresholds to bump the greater version part
# E.g. if rev == REV_MAX => minor += 1, rev = 0
# if minor == MINOR_MAX => major += 1, minor = 0, rev = 0
export MINOR_MAX=9
export REV_MAX=99

# Image params file. Contains essential info as exported variables about the image
# Used by the scripts to share info and image rootfs for provisioning
export IMAGE_PARAMS_FILE='image_params'

# Patched image file name to sync create and publish image script vars
export DEST_IMG_FILE='patched.img'

# Set to 1 for fetching current version from configured Azure File Share
export VERSION_FROM_SHARE=1

# Read/List access SAS token for update image file share
# Images will be in format: OS_TYPE-OS_ARCH-YYYY-MM-DD_VERSION.img.xz
# TODO token FROM secure location!!
export IMAGE_SERVER_URL='https://<FILESHARE>.file.core.windows.net/<SHAREPATH>'
export SAS_TOKEN='<REMOVED>'

# Source image OS distribution information
export DISTRO_NAME='Raspberry Pi OS - Debian 11 (Bullseye)'
export DISTRO_VERSION='2022-01-28'

# Maintenance information
export MAINT_NAME='Some Person'
export MAINT_EMAIL='some.person@company.com'

# Source URL to download the original official image from

# RaspiOS Lite Arm64
#export SRC_URL='https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2022-01-28/2022-01-28-raspios-bullseye-arm64-lite.zip'

# RaspiOS Lite Arm32
#export SRC_URL='https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2022-01-28/2022-01-28-raspios-bullseye-armhf-lite.zip'

# RaspiOS Arm32
export SRC_URL='https://downloads.raspberrypi.org/raspios_armhf/images/raspios_armhf-2022-01-28/2022-01-28-raspios-bullseye-armhf.zip'

# Ubuntu Server 20.04.3 LTS ARM64 Preinstalled
#export SRC_URL='https://cdimage.ubuntu.com/releases/20.04/release/ubuntu-20.04.3-preinstalled-server-arm64+raspi.img.xz'

# Expand the image root filesystem?
# RaspiOS has rootfs shrunk to 0% free space
export GROW_IMAGE=1

# How many megabytes the rootfs is expanded?
export GROW_SIZE_MBYTES=2048

# User name for the created user
export BASE_USER='base'

# Dev password to be set on the created user
# TODO FROM SECURE LOCATION!
export BASE_USER_PASS='tietoKone130222'

# The public SSH key to be delivered for the created user
export SSH_PUBLIC_KEY='ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAg... ssh-key-comment'

# Delete the original pre-made user?
# Improves security
export DEL_OG_USER=1

# Configuration for generating SSH keys on the fly (only for local development runs)
# Leave keyphrase empty for no key password (NOT RECOMMENDED!)
export SSH_KEY_TYPE='ed25519'
export SSH_KEY_ROUNDS=512
export SSH_KEY_BITS=521
export SSH_KEY_PHRASE=''
export SSH_KEY_COMMENT='base-image-key'
export SSH_KEY_FILE='base_key'

# Remote mount point for Image SMB share
export SMB_REMOTE_MOUNT_POINT='//<FILESHARE>.file.core.windows.net/<SHAREPATH>'

# Image Storage SMB Share credentials
# TODO FROM SECURE LOCATION!
export SMB_USERNAME='<REMOVED>'
export SMB_PASSWORD='<REMOVED>'
